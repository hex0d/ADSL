
#include <stdio.h>
#include <math.h>


/***************************************************************************************************************
****************************************************************************************************************
************************************************ Cálculo de e **************************************************
****************************************************************************************************************
***************************************************************************************************************/
// e = 2,718281828459045235360287


// Pelo limite exponencial
double limiteExponencial(int n)
{
	double e = pow(1 + 1.0/n, n);
	return e;
}

//-------------------------------------------------------------------------------

//Pelo série de taylor para x = 1
unsigned long long fat(int n)
{
	unsigned long long fat = 1;
	while (n)
	{
		fat *= n;
		n--;
	}

	return fat;
}

double serieTaylor(int termos)
{
	double e = 0;
	for (int i = 0; i <= termos; i++)
	{
		unsigned long long f = fat(i);
		if (f > 0)
			e += 1.0/fat(i);
		else break;
	}
	return e;
}

//-------------------------------------------------------------------------------


/***************************************************************************************************************
****************************************************************************************************************
************************************************ Cálculo de pi *************************************************
****************************************************************************************************************
***************************************************************************************************************/
// pi = 3.141592653589793238462643


// Série para pi / 4
double piSobre4(int termos)
{
	double pi = 0;

	for (int i = 1; i <= termos; i++)
		pi += 1.0/(2*i - 1) * pow(-1, i+1);
	return pi*4;
}

//-------------------------------------------------------------------------------

// Série para pi com ln2
double piComLN(int termos)
{
	double soma = 1;
	int n = 1;
	for (int i = 1; i < termos; i++)
	{
		n +=3;
		soma += 1.0/n * pow(-1, i);
	}
	return (soma - 1.0/3.0*log(2)) * 9.0/sqrt(3);
}

//-------------------------------------------------------------------------------

// Série para pi quadrado por 6
double pi2Por6(int termos)
{
	double soma = 0;
	for (int i = 1; i <= termos; i++)
		soma += 1.0/i/i;
	return sqrt(soma*6.0);
}

//-------------------------------------------------------------------------------



/***************************************************************************************************************
****************************************************************************************************************
****************************************************************************************************************
****************************************************************************************************************
***************************************************************************************************************/



int main()
{
	printf("Valor de e pelo limite exponencial (precisao limitada devido ao calculo do fatorial): %.20f\n", limiteExponencial(100));
	printf("Valor de e pela serie de Taylor:        %.20f\n", serieTaylor(100));;
	printf("Valor de pi por serie para pi/4:        %.20f\n", piSobre4(100));
	printf("Valor de pi por serie com ln2:          %.20f\n", piComLN(999999));
	printf("Valor de pi por serie com quadrado:   	%.20f\n", pi2Por6(999999));
	

	return 0;
}